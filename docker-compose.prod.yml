version: "3.8"


services:

  caddy:
    image: caddy:2.5.2-alpine
    container_name: ${APP_NAME}-caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      DOMAIN_NAME: ${DOMAIN_NAME:-myapp.local}  
    volumes:
      - ./api:/srv/api
      - ./app/build:/srv/app
      - $PWD/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config

  app:
    container_name: ${APP_NAME}-app
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    volumes:
      - ./app:/app
      - /app/node_modules
    restart: on-failure  
    environment:
      - REACT_APP_URL=${API_URL:-http://localhost:9000}
    ports:
    - "3000:3000"  

  api:
    container_name: ${APP_NAME}-api
    build:
        context: ./api
        dockerfile: Dockerfile.dev
    volumes:
      - ./api:/srv/api:rw,cached
    environment:
      - DATABASE_URL=${DATABASE_URL}
    ports :
      - 9000:9000


  database:
    container_name: ${APP_NAME}-database
    image: postgres:13-alpine
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-api}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-!ChangeMe!}
      - POSTGRES_USER=${POSTGRES_USER:-api-platform}
    volumes:
      - ./docker/database:/var/lib/postgresql/data:rw
    ports:
      - 5432:5432


  adminer:
    container_name: ${APP_NAME}-adminer
    image: adminer
    restart: always
    ports:
      - 8080:8080


volumes:
  database:
  caddy_data:
  caddy_config: