version: "3.8"


services:


  caddy:
    image: caddy:2.5.2-alpine
    container_name: ${APP_NAME}-caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      DOMAIN_NAME: ${DOMAIN_NAME:-myapp.local}  
    volumes:
      - ./api:/srv/api
      - ./app/build:/srv/app
      - $PWD/docker/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - app
      - api


  app:
    container_name: ${APP_NAME}-app
    build:
      context: ./app
      dockerfile: Dockerfile.dev
    stdin_open: true
    volumes:
      - ./app:/app
      - /app/node_modules
    restart: on-failure  
    environment:
      - CHOKIDAR_USEPOLLING=true  
      - REACT_APP_URL=${API_URL:-http://localhost:9000}
    ports:
    - "3000:3000"  


  api:
    container_name: ${APP_NAME}-api
    build:
        context: ./api
        dockerfile: Dockerfile
    volumes:
      - ./api:/srv/api:rw,cached
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - APP_ENV=prod
    ports :
      - 9000:9000
    depends_on:
      - database


  database:
    container_name: ${APP_NAME}-database
    image: mysql:8
    ports:
        - "4306:3306"
    volumes:
        - ./docker/db-data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
        MYSQL_ROOT_PASSWORD: secret
        MYSQL_PASSWORD: secret
      
  # database:
  #   container_name: ${APP_NAME}-database
  #   image: postgres:13-alpine
  #   restart: always
  #   environment:
  #     - POSTGRES_DB=${POSTGRES_DB:-api}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-!ChangeMe!}
  #     - POSTGRES_USER=${POSTGRES_USER:-api-platform}
  #   volumes:
  #     - ./docker/database:/var/lib/postgresql/data:rw
  #   ports:
  #     - 5432:5432


  adminer:
    container_name: ${APP_NAME}-adminer
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - database


volumes:
  database:
  caddy_data:
  caddy_config: